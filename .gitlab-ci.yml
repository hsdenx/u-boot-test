# SPDX-License-Identifier: GPL-2.0+

variables:
  DEFAULT_ALL_TAG: "all"
  DEFAULT_ARM64_TAG: "arm64"
  DEFAULT_FAST_ARM64_TAG: "fast arm64"
  DEFAULT_AMD64_TAG: "amd64"
  DEFAULT_FAST_AMD64_TAG: "fast amd64"
  MIRROR_DOCKER: docker.io
  SJG_LAB: ""
  PLATFORM: linux/amd64,linux/arm64

default:
  tags:
    - ${DEFAULT_ALL_TAG}

workflow:
  rules:
    - if: $CI_COMMIT_BRANCH == 'tbottesting'
    - when: never

# Grab our configured image.  The source for this is found
# in the u-boot tree at tools/docker/Dockerfile
image: ${MIRROR_DOCKER}/trini/u-boot-gitlab-ci-runner:jammy-20240911.1-08Dec2024

# We run some tests in different order, to catch some failures quicker.
stages:
  - tbot-lab

tbottest-test-all-boards:
  stage: tbot-lab
  before_script:
    # install tbot dependencies
    - python -m pip install --upgrade pip
    - pip3 install --user pytest mypy paramiko termcolor2 pyserial coverage pytest-cov
    - pip3 list
    - python3 --version
    # configure ssh
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_UB_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/staging.key
    - chmod 600 ~/.ssh/staging.key
    - git config --global user.email "hs@nabladev.com"
    - git config --global user.name "Heiko Schocher"
    - |
      cat >>~/.ssh/config <<END
        Host $SSH_UB_HOST
          HostName $SSH_UB_HOST
          User $SSH_UB_USER
          IdentityFile ~/.ssh/staging.key
          StrictHostKeyChecking no

        Host ubtestinglab
          HostName ubtestinglab
          User $SSH_UB_USER
          ProxyJump $SSH_UB_HOST
          IdentityFile ~/.ssh/staging.key
          StrictHostKeyChecking no

      END
    - export COLUMNS=160
    - export PYTHONPATH=/home/uboot/.local/lib/python3.10/site-packages
  script:
    # install tbot dependencies
    - python -m pip install --upgrade pip
    - pip3 install --user pytest mypy paramiko termcolor2 pyserial coverage pytest-cov
    - pip3 list
    # Fix warning:
    # The scripts coverage, coverage-3.10 and coverage3 are installed in '/home/uboot/.local/bin' which is not on PATH.
    - export PATH=~/.local/bin:$PATH
    # Fix warning
    # fatal: detected dubious ownership in repository at '/builds/u-boot/custodians/u-boot-i2c'
    - git config --global --add safe.directory /builds/u-boot/custodians/u-boot-i2c
    # now start testing
    - cd tbottesting
    - echo "--------------------- test boards ------------------"
    # set link to tbotconfig data
    - ln -s tbotconfig-hs tbotconfig
    # correct path to keyfile
    - sed -i "s|~/.ssh/id_rsa|~/.ssh/staging.key|g" tbotconfig/hs/tbot.ini
    # setup tbot
    - ./preparetbot.sh
    - returncode=0
    - set +e
    - python3 boardtests.py --usetbotflags
    - exitcode="$?"
    - echo "exitcode ${exitcode}"
    - |
      if [[ "${exitcode}" != "0" ]];then
          echo "boardtests failed with exitcode ${exitcode}"
          returncode=1
      fi
      exit "${returncode}"
  artifacts:
    when: always
    paths:
      - "./results/*"
    reports:
      # TODO how to report more than one board
      junit: ./results/cxg3/results.xml
    expire_in: 1 week
